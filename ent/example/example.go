// Code generated by ent, DO NOT EDIT.

package example

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the example type in the database.
	Label = "example"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// FieldExampleString holds the string denoting the examplestring field in the database.
	FieldExampleString = "example_string"
	// FieldExampleJSON holds the string denoting the examplejson field in the database.
	FieldExampleJSON = "example_json"
	// Table holds the table name of the example in the database.
	Table = "examples"
)

// Columns holds all SQL columns for example fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldExampleString,
	FieldExampleJSON,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "CreatedAt" field.
	DefaultCreatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// OrderOption defines the ordering options for the Example queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCreatedAt orders the results by the CreatedAt field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByExampleString orders the results by the ExampleString field.
func ByExampleString(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldExampleString, opts...).ToFunc()
}
