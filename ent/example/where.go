// Code generated by ent, DO NOT EDIT.

package example

import (
	"atiinc/entgo-sqlite/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.Example {
	return predicate.Example(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.Example {
	return predicate.Example(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.Example {
	return predicate.Example(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.Example {
	return predicate.Example(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.Example {
	return predicate.Example(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.Example {
	return predicate.Example(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.Example {
	return predicate.Example(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.Example {
	return predicate.Example(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.Example {
	return predicate.Example(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "CreatedAt" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Example {
	return predicate.Example(sql.FieldEQ(FieldCreatedAt, v))
}

// ExampleString applies equality check predicate on the "ExampleString" field. It's identical to ExampleStringEQ.
func ExampleString(v string) predicate.Example {
	return predicate.Example(sql.FieldEQ(FieldExampleString, v))
}

// CreatedAtEQ applies the EQ predicate on the "CreatedAt" field.
func CreatedAtEQ(v time.Time) predicate.Example {
	return predicate.Example(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "CreatedAt" field.
func CreatedAtNEQ(v time.Time) predicate.Example {
	return predicate.Example(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "CreatedAt" field.
func CreatedAtIn(vs ...time.Time) predicate.Example {
	return predicate.Example(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "CreatedAt" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Example {
	return predicate.Example(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "CreatedAt" field.
func CreatedAtGT(v time.Time) predicate.Example {
	return predicate.Example(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "CreatedAt" field.
func CreatedAtGTE(v time.Time) predicate.Example {
	return predicate.Example(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "CreatedAt" field.
func CreatedAtLT(v time.Time) predicate.Example {
	return predicate.Example(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "CreatedAt" field.
func CreatedAtLTE(v time.Time) predicate.Example {
	return predicate.Example(sql.FieldLTE(FieldCreatedAt, v))
}

// ExampleStringEQ applies the EQ predicate on the "ExampleString" field.
func ExampleStringEQ(v string) predicate.Example {
	return predicate.Example(sql.FieldEQ(FieldExampleString, v))
}

// ExampleStringNEQ applies the NEQ predicate on the "ExampleString" field.
func ExampleStringNEQ(v string) predicate.Example {
	return predicate.Example(sql.FieldNEQ(FieldExampleString, v))
}

// ExampleStringIn applies the In predicate on the "ExampleString" field.
func ExampleStringIn(vs ...string) predicate.Example {
	return predicate.Example(sql.FieldIn(FieldExampleString, vs...))
}

// ExampleStringNotIn applies the NotIn predicate on the "ExampleString" field.
func ExampleStringNotIn(vs ...string) predicate.Example {
	return predicate.Example(sql.FieldNotIn(FieldExampleString, vs...))
}

// ExampleStringGT applies the GT predicate on the "ExampleString" field.
func ExampleStringGT(v string) predicate.Example {
	return predicate.Example(sql.FieldGT(FieldExampleString, v))
}

// ExampleStringGTE applies the GTE predicate on the "ExampleString" field.
func ExampleStringGTE(v string) predicate.Example {
	return predicate.Example(sql.FieldGTE(FieldExampleString, v))
}

// ExampleStringLT applies the LT predicate on the "ExampleString" field.
func ExampleStringLT(v string) predicate.Example {
	return predicate.Example(sql.FieldLT(FieldExampleString, v))
}

// ExampleStringLTE applies the LTE predicate on the "ExampleString" field.
func ExampleStringLTE(v string) predicate.Example {
	return predicate.Example(sql.FieldLTE(FieldExampleString, v))
}

// ExampleStringContains applies the Contains predicate on the "ExampleString" field.
func ExampleStringContains(v string) predicate.Example {
	return predicate.Example(sql.FieldContains(FieldExampleString, v))
}

// ExampleStringHasPrefix applies the HasPrefix predicate on the "ExampleString" field.
func ExampleStringHasPrefix(v string) predicate.Example {
	return predicate.Example(sql.FieldHasPrefix(FieldExampleString, v))
}

// ExampleStringHasSuffix applies the HasSuffix predicate on the "ExampleString" field.
func ExampleStringHasSuffix(v string) predicate.Example {
	return predicate.Example(sql.FieldHasSuffix(FieldExampleString, v))
}

// ExampleStringEqualFold applies the EqualFold predicate on the "ExampleString" field.
func ExampleStringEqualFold(v string) predicate.Example {
	return predicate.Example(sql.FieldEqualFold(FieldExampleString, v))
}

// ExampleStringContainsFold applies the ContainsFold predicate on the "ExampleString" field.
func ExampleStringContainsFold(v string) predicate.Example {
	return predicate.Example(sql.FieldContainsFold(FieldExampleString, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Example) predicate.Example {
	return predicate.Example(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Example) predicate.Example {
	return predicate.Example(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Example) predicate.Example {
	return predicate.Example(sql.NotPredicates(p))
}
